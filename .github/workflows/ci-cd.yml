name: PageSpeed Insights Check
on:
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]

jobs:
  extract-diff-and-deploy:
    name: Extract Changes and Deploy
    runs-on: ubuntu-latest
    outputs:
      html_files: ${{ steps.extract_html_diff.outputs.html_files }}
      html_count: ${{ steps.extract_html_diff.outputs.html_count }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Extract HTML file differences
        id: extract_html_diff
        run: |
          git fetch origin || true
          # HTMLファイルのみを抽出
          HTML_FILES=$(git diff --name-only origin/main HEAD | grep -E 'public/.*\.html$' | sed 's#^public/##g' | tr '\n' ',' || echo "")

          # 末尾のカンマを削除
          HTML_FILES=${HTML_FILES%,}

          # ファイルがある場合、改行をカンマに変換
          if [ -n "$HTML_FILES" ]; then
            HTML_FILES=$(echo "$HTML_FILES" | tr '\n' ',')
            HTML_COUNT=$(echo "$HTML_FILES" | awk -F',' '{print NF}')
          else
            echo "No HTML files changed"
            HTML_FILES=""
            HTML_COUNT=0
          fi

          echo "HTML files changed: $HTML_FILES"
          echo "html_files=${HTML_FILES}" >> $GITHUB_OUTPUT
          echo "html_count=${HTML_COUNT}" >> $GITHUB_OUTPUT
          echo "$ALL_FILES" | tr ',' '\n' > changed_files.txt

      - name: Install lftp
        run: sudo apt-get install -y lftp
        if: steps.extract_html_diff.outputs.html_files != ''

      - name: Upload changed files with LFTP
        if: steps.extract_html_diff.outputs.html_files != ''
        run: |
          # 変更されたファイルリストを取得（カンマ区切りを改行区切りに変換）
          CHANGED_FILES=$(echo "${{ steps.extract_html_diff.outputs.html_files }}" | tr ',' '\n')

          # LFTPでの並列転送（差分ファイルのみ）
          lftp -e "
          set ftp:ssl-allow true;
          set ssl:verify-certificate false;
          set net:max-retries 3;
          set net:timeout 10;
          set net:reconnect-interval-base 5;
          set net:reconnect-interval-multiplier 1;
          set mirror:parallel-directories true;

          open -u ${{ secrets.DEVELOPMENT_USER_NAME }},${{ secrets.DEVELOPMENT_PASSWORD }} ${{ secrets.DEVELOPMENT_HOST }};

          # 並列転送設定
          set mirror:parallel-transfer-count 10;
          set pget:parallel-transfer-count 5;


          # changedファイルを並列アップロード
          cat ../changed_files.txt | while read file; do
            if [ -f \"\$file\" ]; then
              dir=\$(dirname \"\$file\" | sed 's#^public/##g')
              filename=\$(basename \"\$file\")
              echo \"Uploading \$file to \$dir\";

              # ディレクトリが存在しない場合は作成
              mkdir -p \"\$dir\" 2>/dev/null || true

              # ファイルをアップロード
              put -O \"\$dir\" \"\$file\";
            fi
          done &

          # 並列ジョブでアップロード完了を待機
          wait;
          bye
          "

  check_psi:
    needs: extract-diff-and-deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ needs.extract-diff-and-deploy.outputs.html_count > 0 }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4.2.0
        with:
          node-version: 'latest'

      - name: Check PSI
        env:
          PSI_API_KEY: ${{ secrets.PSI_API_KEY }}
          BASE_URL: "${{ vars.DEVELOPMENT_REMOTE_PATH }}/${{ github.repository }}/}"
          HTML_FILES: ${{ needs.extract-diff-and-deploy.outputs.html_files }}
        id: psi_check
        run: |
          echo "HTML_FILES: ${{ needs.extract-diff-and-deploy.outputs.html_files }}"
          RESULT=$(node .github/actions/psi)
          echo "result<<EOF" >> $GITHUB_OUTPUT
          echo "$RESULT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment PR with PSI results
        uses: actions/github-script@v7.0.1
        if: ${{ always() && steps.psi_check.outcome == 'success' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const result = `${{ steps.psi_check.outputs.result }}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: result
            });

  cache-cleanup:
    needs: extract-diff-and-deploy
    runs-on: ubuntu-latest
    timeout-minutes: 5
    # ワークフローの最後に必ず実行
    if: ${{ always() }}
    steps:
      - name: Cleanup
        run: |
          # GH CLIのインストール（キャッシュ削除に必要）
          if ! command -v gh &> /dev/null; then
            echo "Installing GitHub CLI..."
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt install gh
          fi

          # キャッシュ拡張機能のインストール
          gh extension install actions/gh-actions-cache

          set +e
          echo "Deleting caches..."
          gh actions-cache list -R $REPO -L 100 | while read -r cacheKey _ branch _
          do
            gh actions-cache delete "$cacheKey" -R $REPO -B "$branch" --confirm
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
