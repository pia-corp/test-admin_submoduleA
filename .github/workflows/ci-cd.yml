name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Install dependencies
        run: npm install

      - name: Run HTMLHint
        run: npx htmlhint public/**/*.html

      - name: Run Stylelint
        run: npx stylelint "public/assets/css/**/*.css"

      - name: Run ESLint
        run: npx eslint public/assets/js/**/*.js


# jobs:
#   check_links:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 'latest'

#       - name: Install dependencies
#         run: npm install

#       - name: Start local server
#         run: |
#           npx http-server ./public -p 8081 &
#           sleep 5

#       - name: Run link checker
#         id: link-checker
#         run: node link-checker.js

#       - name: Post broken links to PR
#         uses: actions/github-script@v6
#         with:
#           script: |
#             const errorsArray = ${{ steps.link-checker.outputs.errors }}

#             let message = "";
#             for (let key in errorsArray) {
#               for (let i = 0, len = errorsArray[key].length; i < len; i++) {
#                 message += `| ${key} | ${errorsArray[key][i]} |\n`;
#               }
#             }

#             const comment = `
#               ## Broken Links Report
#               | ファイル名 | リンク切れパス |
#               | :-- | :-- |
#               ${message}
#             `;
#             github.rest.issues.createComment({
#               ...context.repo,
#               issue_number: context.issue.number,
#               body: comment
#             });
