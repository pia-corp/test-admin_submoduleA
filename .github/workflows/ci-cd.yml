name: PageSpeed Insights Check
on:
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]

jobs:
  extract-diff-and-deploy:
    name: Extract Changes and Deploy
    runs-on: ubuntu-latest
    outputs:
      html_files: ${{ steps.extract_html_diff.outputs.html_files }}
      html_count: ${{ steps.extract_html_diff.outputs.html_count }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Extract HTML file differences
        id: extract_html_diff
        run: |
          git fetch origin || true
          # HTMLファイルのみを抽出
          HTML_FILES=$(git diff --name-only origin/main HEAD | grep -E 'public/.*\.html$' | sed 's#^public/##g' | tr '\n' ',' || echo "")

          # 末尾のカンマを削除
          HTML_FILES=${HTML_FILES%,}

          # ファイルがある場合、改行をカンマに変換
          if [ -n "$HTML_FILES" ]; then
            HTML_FILES=$(echo "$HTML_FILES" | tr '\n' ',')
            HTML_COUNT=$(echo "$HTML_FILES" | awk -F',' '{print NF}')
          else
            echo "No HTML files changed"
            HTML_FILES=""
            HTML_COUNT=0
          fi

          echo "HTML files changed: $HTML_FILES"
          echo "html_files=${HTML_FILES}" >> $GITHUB_OUTPUT
          echo "html_count=${HTML_COUNT}" >> $GITHUB_OUTPUT

      - name: Install lftp
        run: sudo apt-get install -y lftp
        if: steps.extract_html_diff.outputs.html_files != ''

      - name: Set REMOTE path
        run: echo "REMOTE=$(echo ${GITHUB_REPOSITORY} | cut -d'/' -f2)" >> $GITHUB_ENV

      - name: Upload changed files with LFTP
        if: steps.extract_html_diff.outputs.html_files != ''
        env:
          FTP_HOST: "${{ vars.DEVELOPMENT_HOST }}"
          FTP_USER: "${{ vars.DEVELOPMENT_USER_NAME }}"
          FTP_PASSWORD: "${{ secrets.DEVELOPMENT_PASSWORD }}"
          LOCAL: "./public"
        run: |
          lftp -u "$FTP_USER","$FTP_PASSWORD" "$FTP_HOST" <<EOF
          set net:max-retries 3
          set net:reconnect-interval-base 5
          set net:reconnect-interval-max 15
          set ssl:check-hostname false

          mirror -R --delete --only-newer --use-cache --parallel=10 --verbose=3 "$LOCAL" "$REMOTE"

          # ディレクトリの権限を755に変更
          find "$REMOTE" -type d -exec chmod 755 {} \;

          # ファイルの権限を664に変更
          find "$REMOTE" -type f -exec chmod 664 {} \;

          bye
          EOF


        # run: |
        #   # 変更されたファイルリストを取得（カンマ区切りを改行区切りに変換）
        #   CHANGED_FILES=$(echo "${{ steps.extract_html_diff.outputs.html_files }}" | tr ',' '\n')
        #   HOST="${{ vars.DEVELOPMENT_HOST }}"
        #   USERNAME="${{ vars.DEVELOPMENT_USER_NAME }}"
        #   PASSWORD="${{ secrets.DEVELOPMENT_PASSWORD }}"

        #   # ローカルからサーバへデータをアップロードさせたい場合
        #   LOCAL="./public/"
        #   REMOTE="${{ vars.DEVELOPMENT_REMOTE_PATH }}${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}/"
        #   echo "$REMOTE"

        #   # LFTPスクリプトを作成（アップロード部分のみ）
        #   LFTP_SCRIPT="
        #   set net:max-retries 3
        #   set net:reconnect-interval-base 5
        #   set net:reconnect-interval-max 15
        #   open -u $USERNAME,$PASSWORD $HOST
        #   set ssl:check-hostname false

        #   # mirror でフォルダとファイルをアップロード
        #   mirror -R \
        #     --only-newer \
        #     --parallel=10 \
        #     --verbose \
        #     $LOCAL $REMOTE
        #   "

        #   # LFTP を実行（アップロード）
        #   lftp -c "$LFTP_SCRIPT"

        #   # ディレクトリと通常ファイルの権限を一括で変更する
        #   {
        #     # すべてのディレクトリを検索して755権限を設定
        #     lftp "$SERVER" <<EOF
        #     set ssl:check-hostname false
        #     cd "$REMOTE"
        #     find | grep "/$"
        #     quit
        #   EOF
        #   } | awk '{ printf "chmod 755 \"%s\"\n", $0 }' > /tmp/chmod_dirs.txt

        #   {
        #     # すべてのファイルを検索して664権限を設定
        #     lftp "$SERVER" <<EOF
        #     set ssl:check-hostname false
        #     cd "$REMOTE"
        #     find | grep -v "/$"
        #     quit
        #   EOF
        #   } | awk '{ printf "chmod 664 \"%s\"\n", $0 }' > /tmp/chmod_files.txt

        #   # 権限変更コマンドを実行
        #   {
        #     echo "set ssl:check-hostname false"
        #     echo "open $SERVER"
        #     echo "cd \"$REMOTE\""
        #     cat /tmp/chmod_dirs.txt
        #     cat /tmp/chmod_files.txt
        #   } | lftp

  # check_psi:
  #   needs: extract-diff-and-deploy
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30
  #   if: ${{ needs.extract-diff-and-deploy.outputs.html_count > 0 }}
  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: actions/setup-node@v4.2.0
  #       with:
  #         node-version: 'latest'

  #     - name: Check PSI
  #       env:
  #         PSI_API_KEY: ${{ secrets.PSI_API_KEY }}
  #         BASE_URL: "${{ vars.DEVELOPMENT_REMOTE_PATH }}/${{ github.repository }}/}"
  #         HTML_FILES: ${{ needs.extract-diff-and-deploy.outputs.html_files }}
  #       id: psi_check
  #       run: |
  #         echo "HTML_FILES: ${{ needs.extract-diff-and-deploy.outputs.html_files }}"
  #         RESULT=$(node .github/actions/psi)
  #         echo "result<<EOF" >> $GITHUB_OUTPUT
  #         echo "$RESULT" >> $GITHUB_OUTPUT
  #         echo "EOF" >> $GITHUB_OUTPUT

  #     - name: Comment PR with PSI results
  #       uses: actions/github-script@v7.0.1
  #       if: ${{ steps.psi_check.outcome == 'success' }}
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         script: |
  #           const result = `${{ steps.psi_check.outputs.result }}`;
  #           github.rest.issues.createComment({
  #             issue_number: context.issue.number,
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             body: result
  #           });
