# =============================
# GitHub Actions リンク切れチェックワークフロー
# =============================
#
# 概要:
# このワークフローはプルリクエスト時にリポジトリ内のHTMLファイルのリンク切れをチェックします。
# 見つかったリンク切れはプルリクエストのコメントとして報告されます。
#
# フロー:
# 1. プルリクエストが開かれた/再開された/同期された時に実行
# 2. リポジトリのコードをチェックアウト
# 3. Node.js環境をセットアップ
# 4. 依存関係をインストール（キャッシュがあれば使用）
# 5. ローカルHTTPサーバーを起動
# 6. リンクチェッカースクリプトを実行
# 7. 見つかったリンク切れをPRにコメント
#
# 注意事項:
# - 最大100件までのリンク切れが報告されます
# - 同じブランチに対する古いワークフローは自動的にキャンセルされます
# - timeout-minutesは5分に設定されています
#
# =============================

name: リンク切れチェック

on:
  pull_request:
    branches:
      - 'main'
    types: [opened, reopened, synchronize]

# 同じPRで複数のワークフローが実行されないようにする設定
# 新しいコミットがプッシュされた場合、進行中の古いワークフローは自動的にキャンセルされる
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# デフォルトでは権限を制限
permissions: {}

jobs:
  # =============================
  # リポジトリ内のHTMLファイルのリンク切れをチェックします。見つかったリンク切れはプルリクエストのコメントとして報告されます。
  # =============================
  check-links:
    runs-on: ubuntu-latest
    # 実行時間が5分を超えた場合、ワークフローを強制終了
    timeout-minutes: 5
    # 必要な権限のみを付与
    permissions:
      contents: read         # リポジトリコンテンツの読み取り権限
      pull-requests: write   # PRへのコメント投稿権限

    # =============================
    # 環境変数の設定
    # - イベントタイプに応じて異なるソースから値を取得
    # - 必要に応じてデフォルト値を設定
    # =============================
    env:
      REPOSITORY_NAME: ${{ github.event.repository.name }}

    steps:
      # リポジトリのコードをチェックアウト
      - name: リポジトリをチェックアウト
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false  # 不要な認証情報を保持しない

      # Node.js環境のセットアップ
      - name: Node.jsセットアップ
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v3.5.1
        with:
          node-version: 'latest'  # 最新のNode.jsバージョンを使用

      # 依存関係をインストール
      - name: Install dependencies
        run: npm ci

      # ローカルHTTPサーバーを起動（リンクチェックのため）
      - name: Start local server
        run: |
          npx http-server ./public -p 8081 &
          sleep 5

      # リンクチェッカースクリプトを実行
      - name: Run link checker
        id: link-checker
        run: node link-checker.js

      # 見つかったリンク切れをPRにコメント
      - name: Post broken links to PR
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          LINK_CHECK_ERRORS: ${{ steps.link-checker.outputs.errors }}
        with:
          script: |
            // リンクチェッカーからのエラー出力を取得
            const errorsArray = process.env.LINK_CHECK_ERRORS;

            // エラーメッセージを整形
            let message = "";
            for (let key in errorsArray) {
              for (let i = 0, len = errorsArray[key].length; i < len; i++) {
                message += `| ${key} | ${errorsArray[key][i]} |\n`;
              }
            }

            // PRにコメントする内容を作成
            let comment = ``;
            if (message.length === 0) {
              comment = `
                ## リンク切れレポート
                リンク切れは見つかりませんでした
                | ファイル名 | リンク切れパス |
                | なし | なし |
              `;
            } else {
              comment = `
                ## リンク切れレポート
                | ファイル名 | リンク切れパス |
                | :-- | :-- |
                ${message}

                ## 注意
                ・リンク切れは最大100件まで表示されます。
              `;
            }

            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: comment
            });
