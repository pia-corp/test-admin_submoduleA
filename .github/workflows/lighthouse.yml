name: Lighthouse CI

on:
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]

jobs:
  lighthouse-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Install dependencies
        run: npm ci || npm install

      - name: Build project
        run: npm run build || echo "No build script found"

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@latest

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.14.x

      - name: Run Lighthouse CI and generate report
        id: lighthouse
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p .lighthouseci

          lhci autorun || echo "LHCI failed!"

          # Create a formatted Markdown report
          echo "## Lighthouse CI Report" > lighthouse-report.md
          echo "" >> lighthouse-report.md
          echo "| File name | Performance | Accessibility | Best practices | SEO | URL |" >> lighthouse-report.md
          echo "| --------- | ----------- | ------------- | -------------- | --- | --- |" >> lighthouse-report.md

          for file in .lighthouseci/lhr-*.json; do
            if [ -f "$file" ]; then
              FILENAME=$(basename "$file" .json)
              URL=$(jq -r '.finalUrl' "$file")

              # Handle potential null values and convert to 0 if necessary
              PERFORMANCE=$(jq -r '.categories.performance.score // 0 * 100 | floor' "$file")
              ACCESSIBILITY=$(jq -r '.categories.accessibility.score // 0 * 100 | floor' "$file")
              BEST_PRACTICES=$(jq -r '.categories["best-practices"].score // 0 * 100 | floor' "$file")
              SEO=$(jq -r '.categories.seo.score // 0 * 100 | floor' "$file")

              echo "| $FILENAME | $PERFORMANCE | $ACCESSIBILITY | $BEST_PRACTICES | $SEO | $URL |" >> lighthouse-report.md
            fi
          done

          REPORT=$(cat lighthouse-report.md)
          echo "report<<EOF" >> $GITHUB_OUTPUT
          echo "$REPORT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `${{ steps.lighthouse.outputs.report }}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
