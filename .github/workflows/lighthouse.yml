name: Lighthouse Audit

on:
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]

jobs:
  lighthouse-audit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Start local server
        run: |
          npx serve public -l 8080 &
          echo $! > .server-pid
          sleep 5

      - name: Run Lighthouse
        uses: treosh/lighthouse-ci-action@v12
        with:
          configPath: './.github/config/.lighthouserc.json'
          budgetPath: ./.github/config/.budget.json
          temporaryPublicStorage: true

      - name: Create results directory
        run: mkdir -p lighthouse-results

      - name: Post Lighthouse report to PR
        run: |
          REPORTS_DIR="lighthouse-results"
          HTML_FILES=$(find $REPORTS_DIR -name "*.html")

          echo "| File name | Performance | Accessibility | Best practices | SEO |" > summary.md
          echo "| --------- | ----------- | ------------- | -------------- | --- |" >> summary.md

          for file in $HTML_FILES; do
            RELATIVE_PATH=$(basename "$file")
            PERFORMANCE=$(cat "$file" | grep -oP '(?<=Performance</th><td class="numeric">)\d+')
            ACCESSIBILITY=$(cat "$file" | grep -oP '(?<=Accessibility</th><td class="numeric">)\d+')
            BEST_PRACTICES=$(cat "$file" | grep -oP '(?<=Best Practices</th><td class="numeric">)\d+')
            SEO=$(cat "$file" | grep -oP '(?<=SEO</th><td class="numeric">)\d+')

            echo "| $RELATIVE_PATH | $PERFORMANCE | $ACCESSIBILITY | $BEST_PRACTICES | $SEO |" >> summary.md
          done

          gh pr comment ${{ github.event.pull_request.number }} --body "$(cat summary.md)"

      - name: Stop local server
        if: always()
        run: |
          if [ -f .server-pid ]; then
            kill $(cat .server-pid) || true
          fi
