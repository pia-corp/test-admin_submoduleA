# name: Lighthouse CI

# on:
#   pull_request:
#     branches:
#       - main
#     types: [opened, edited, reopened, synchronize]

# jobs:
#   lighthouse:
#     runs-on: ubuntu-latest
#     permissions:
#       pull-requests: write

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 18

#       - name: Install Dependencies
#         run: |
#           npm install -g lighthouse
#           sudo apt-get install parallel -y

#       - name: Start static server
#         run: |
#           npx http-server public -p 8080 &
#           sleep 10
#           until curl -s -o /dev/null -w "%{http_code}" http://localhost:8080 | grep -q "200"; do
#             echo "Waiting for server..."
#             sleep 2
#           done

#       - name: Run Lighthouse for Desktop & Mobile (Parallel)
#         run: |
#           echo "| File name | Device  | Performance | Accessibility | Best practices | SEO |" > report.md
#           echo "|-----------|---------|-------------|--------------|---------------|-----|" >> report.md

#           find public -name "*.html" | parallel -j 2 '
#             file={}
#             url="http://localhost:8080/${file#public/}"

#             # Desktop
#             results_desktop=$(lighthouse "$url" --quiet --output=json --chrome-flags="--headless" --preset=desktop)
#             performance_d=$(echo "$results_desktop" | jq -r ".categories.performance.score // 0 * 100")
#             accessibility_d=$(echo "$results_desktop" | jq -r ".categories.accessibility.score // 0 * 100")
#             best_practices_d=$(echo "$results_desktop" | jq -r ".categories.\"best-practices\".score // 0 * 100")
#             seo_d=$(echo "$results_desktop" | jq -r ".categories.seo.score // 0 * 100")
#             echo "| $file | Desktop | $performance_d | $accessibility_d | $best_practices_d | $seo_d |" >> report.md

#             # Mobile
#             results_mobile=$(lighthouse "$url" --quiet --output=json --chrome-flags="--headless" --preset=mobile)
#             performance_m=$(echo "$results_mobile" | jq -r ".categories.performance.score // 0 * 100")
#             accessibility_m=$(echo "$results_mobile" | jq -r ".categories.accessibility.score // 0 * 100")
#             best_practices_m=$(echo "$results_mobile" | jq -r ".categories.\"best-practices\".score // 0 * 100")
#             seo_m=$(echo "$results_mobile" | jq -r ".categories.seo.score // 0 * 100")
#             echo "| $file | Mobile  | $performance_m | $accessibility_m | $best_practices_m | $seo_m |" >> report.md
#           '

#       - name: Debug report file
#         run: cat report.md

#       - name: Add PR comment
#         if: success()
#         uses: mshick/add-pr-comment@v2
#         with:
#           message-path: report.md
#           allow-repeats: true
